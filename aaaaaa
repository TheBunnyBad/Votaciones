const int tempSensor = 0;
// Rele 2
const int LIGHT_BLUE = 10;
// Rele 1
const int AIR = 9;
// Rele 4
const int LIGHT_AC = 8;
// Rele 3
const int ALARM = 7;
float tempMax = 0;

char a = 1;
void setup() {
  pinMode(LIGHT_BLUE, OUTPUT);
  pinMode(AIR, OUTPUT);
  pinMode(LIGHT_AC, OUTPUT);
  pinMode(ALARM, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  if (Serial.available() > 0) {    // is a character available?
      a= Serial.read();       // get the character
    
      // check if a number was received
      if ((a >= '0') && (a <= '9')) {
        Serial.print("Number received: ");
        Serial.println(a);
      }
      else {
        Serial.println("Not a number.");
      }
    } // end: if (Serial.available() > 0)
  delay(1000);
  turnOn(a);
}

void turnOn(bool blue, bool ac, bool air, bool alarm) {
   digitalWrite(LIGHT_BLUE, blue);
   digitalWrite(LIGHT_AC, !ac);
   digitalWrite(AIR, !air);
   digitalWrite(ALARM, !alarm);
}

float readTempSensor() {
  int input = analogRead(tempSensor);
  float mv = (5000 / 1024) * input;
  float celsius = mv / 10;
  Serial.println(celsius);
  return celsius;
}

void turnOn(char type){
  float celcius = readTempSensor();
  switch(a){
    case '1':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 10);
      turnOnComponent(celcius, AIR, 11, 21);
      turnOnComponent(celcius, LIGHT_AC, 22, 75);
      turnOnComponent(celcius, ALARM, 50, 200);
      break;
    case '2':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 8);
      turnOnComponent(celcius, LIGHT_AC, 9, 19);
      turnOnComponent(celcius, AIR, 20, 77);
      turnOnComponent(celcius, ALARM, 78, 200);
      break;
    case '3':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 12);
      turnOnComponent(celcius, LIGHT_AC, 13, 23);
      turnOnComponent(celcius, AIR, 24, 82);
      turnOnComponent(celcius, ALARM, 83, 200);
      break;
    case '4':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 7);
      turnOnComponent(celcius, LIGHT_AC, 8, 25);
      turnOnComponent(celcius, AIR, 26, 76);
      turnOnComponent(celcius, ALARM, 99, 200);
      break;
    case '5':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 13);
      turnOnComponent(celcius, LIGHT_AC, 14, 27);
      turnOnComponent(celcius, AIR, 28, 76);
      turnOnComponent(celcius, ALARM, 77, 200);
      break;
    case '6':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 15);
      turnOnComponent(celcius, LIGHT_AC, 16, 29);
      turnOnComponent(celcius, AIR, 30, 94);
      turnOnComponent(celcius, ALARM, 95, 200);
      break;
    case '7':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 20);
      turnOnComponent(celcius, LIGHT_AC, 21, 34);
      turnOnComponent(celcius, AIR, 35, 100);
      turnOnComponent(celcius, ALARM, 101, 200);
      break;
    case '8':
      turnOnComponent(celcius, LIGHT_BLUE, 0, 11);
      turnOnComponent(celcius, LIGHT_AC, 12, 22);
      turnOnComponent(celcius, AIR, 23, 71);
      turnOnComponent(celcius, ALARM, 72, 200);
    break;  
    case '9':
      tempMax = 0;
      break;
    case '0':    
      Serial.println("MAX TEMPERATURE: ");
      Serial.println(tempMax);
  }
}

void turnOnComponent(float temp, int output, int tempInf, int tempSup){
  if(temp >= tempInf && temp <= tempSup){
    digitalWrite(output, LOW);
    Serial.println("PIN:");
    Serial.println(output);
  } else {
    digitalWrite(output, HIGH);
  }
  if(temp > tempMax) tempMax = temp;
}


